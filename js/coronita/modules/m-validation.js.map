{"version":3,"sources":["coronita/modules/m-validation.js"],"names":["Coronita","clientflow","mValidation","SELECTOR_CORONITA_INPUT_DESCRIPTION_M_VALIDATION","SELECTOR_CORONITA_INPUT_DESCRIPTION_TEXT","SELECTOR_CORONITA_INPUT_DESCRIPTION_DESCRIBEDBY","ATTR_CORONITA_INPUT_DESCRIPTION_M_VALIDATION","CLASS_IS_INVALID","invalid","$component","isInvalid","error","$mValidation","find","hasDescriptionText","length","$description","closest","$describedBy","html","_","c_coronita_m_validation","id","attr","text","removeAttr","toggleClass","uiCoronitaModulesValidation"],"mappings":"AAAAA,QAAQ,CAACC,UAAT,CAAoBC,WAApB,GAAmC,YAAY;AAC7C,MAAIC,gDAAgD,GAAG,gDAAvD;AACA,MAAIC,wCAAwC,GAAG,wCAA/C;AACA,MAAIC,+CAA+C,GAAG,mCAAtD;AACA,MAAIC,4CAA4C,GAAG,8CAAnD;AACA,MAAIC,gBAAgB,GAAG,YAAvB;;AAEA,WAASC,OAAT,CAAkBC,UAAlB,EAA8BC,SAA9B,EAAyCC,KAAzC,EAAgD;AAC9C,QAAIC,YAAY,GAAGH,UAAU,CAACI,IAAX,CAAgBV,gDAAhB,CAAnB;AACA,QAAIW,kBAAkB,GAAGL,UAAU,CAACI,IAAX,CAAgBT,wCAAhB,EAA0DW,MAA1D,GAAmE,CAA5F;AACA,QAAIC,YAAY,GAAGJ,YAAY,CAACK,OAAb,CAAqB,eAArB,CAAnB;AACA,QAAIC,YAAY,GAAGT,UAAU,CAACI,IAAX,CAAgBR,+CAAhB,CAAnB;;AAEA,QAAIK,SAAS,IAAIC,KAAjB,EAAwB;AACtBC,MAAAA,YAAY,CAACO,IAAb,CAAkBC,CAAC,CAACC,uBAAF,CAA0B;AAC1CC,QAAAA,EAAE,EAAEV,YAAY,CAACW,IAAb,CAAkBjB,4CAAlB,CADsC;AAE1CK,QAAAA,KAAK,EAAE;AACLa,UAAAA,IAAI,EAAEb;AADD;AAFmC,OAA1B,CAAlB;AAMD;;AAEDK,IAAAA,YAAY,CAACO,IAAb,CAAkB,aAAlB,EAAiCb,SAAS,IAAII,kBAAb,GAAkC,OAAlC,GAA4C,MAA7E;;AACA,QAAIJ,SAAS,IAAII,kBAAjB,EAAqC;AACnCI,MAAAA,YAAY,CAACK,IAAb,CAAkB,kBAAlB,EAAsCP,YAAY,CAACO,IAAb,CAAkB,IAAlB,CAAtC;AACD,KAFD,MAEO;AACLL,MAAAA,YAAY,CAACO,UAAb,CAAwB,kBAAxB;AACD;;AAEDhB,IAAAA,UAAU,CAACiB,WAAX,CAAuBnB,gBAAvB,EAAyCG,SAAzC,EACGG,IADH,CACQ,gBADR,EAEGU,IAFH,CAEQ,cAFR,EAEyBb,SAAD,GAAc,MAAd,GAAuB,OAF/C;AAGD;;AAED,SAAOF,OAAP;AACD,CAnCiC,EAAlC;;AAqCA,IAAImB,2BAA2B,GAAG3B,QAAQ,CAACC,UAAT,CAAoBC,WAAtD","sourcesContent":["Coronita.clientflow.mValidation = (function () {\n  var SELECTOR_CORONITA_INPUT_DESCRIPTION_M_VALIDATION = '[data-coronita-input-description-m-validation]';\n  var SELECTOR_CORONITA_INPUT_DESCRIPTION_TEXT = '[data-coronita-input-description-text]';\n  var SELECTOR_CORONITA_INPUT_DESCRIPTION_DESCRIBEDBY = '[data-coronita-input-describedby]';\n  var ATTR_CORONITA_INPUT_DESCRIPTION_M_VALIDATION = 'data-coronita-input-description-m-validation';\n  var CLASS_IS_INVALID = 'is-invalid';\n\n  function invalid ($component, isInvalid, error) {\n    var $mValidation = $component.find(SELECTOR_CORONITA_INPUT_DESCRIPTION_M_VALIDATION);\n    var hasDescriptionText = $component.find(SELECTOR_CORONITA_INPUT_DESCRIPTION_TEXT).length > 0;\n    var $description = $mValidation.closest('[aria-hidden]');\n    var $describedBy = $component.find(SELECTOR_CORONITA_INPUT_DESCRIPTION_DESCRIBEDBY);\n\n    if (isInvalid && error) {\n      $mValidation.html(_.c_coronita_m_validation({\n        id: $mValidation.attr(ATTR_CORONITA_INPUT_DESCRIPTION_M_VALIDATION),\n        error: {\n          text: error\n        }\n      }));\n    }\n\n    $description.attr('aria-hidden', isInvalid || hasDescriptionText ? 'false' : 'true');\n    if (isInvalid || hasDescriptionText) {\n      $describedBy.attr('aria-describedby', $description.attr('id'));\n    } else {\n      $describedBy.removeAttr('aria-describedby');\n    }\n\n    $component.toggleClass(CLASS_IS_INVALID, isInvalid)\n      .find('[aria-invalid]')\n      .attr('aria-invalid', (isInvalid) ? 'true' : 'false');\n  }\n\n  return invalid;\n})();\n\nvar uiCoronitaModulesValidation = Coronita.clientflow.mValidation;\n"],"file":"m-validation.js"}