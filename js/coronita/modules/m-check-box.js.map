{"version":3,"sources":["coronita/modules/m-check-box.js"],"names":["Coronita","clientflow","mCheckBox","isChanged","ev","SELECTOR_C_CHECK_BOX","currentTarget","ID","id","split","pop","SELECTOR_M_CHECK_BOX","document","getElementById","SELECTOR_INPUT_CURRENCY","getElementsByClassName","focus","classList","contains","remove","removeAttribute","setAttribute","add","init","data","$inputCheckBox","addEventListener","ui","SELECTOR_CHECK_BOXES","Array","from","forEach","checkBox","SELECTOR_INPUT_CHECK_BOX","$checkBox"],"mappings":"AAAA;AAEAA,QAAQ,CAACC,UAAT,CAAoBC,SAApB,GAAiC,YAAY;AAE3C,WAASC,SAAT,CAAmBC,EAAnB,EAAuB;AACrB,QAAMC,oBAAoB,GAAGD,EAAE,CAACE,aAAhC;AACA,QAAMC,EAAE,GAAGF,oBAAoB,CAACG,EAArB,CAAwBC,KAAxB,CAA8B,GAA9B,EAAmCC,GAAnC,EAAX;AACA,QAAMC,oBAAoB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iBAAeN,EAAvC,CAA7B;AACA,QAAMO,uBAAuB,GAAGH,oBAAoB,CAACI,sBAArB,CAA4C,yBAA5C,EAAuE,CAAvE,CAAhC;AACAD,IAAAA,uBAAuB,CAACE,KAAxB;;AAEA,QAAKL,oBAAoB,CAACM,SAArB,CAA+BC,QAA/B,CAAwC,YAAxC,CAAL,EAA6D;AAC3DP,MAAAA,oBAAoB,CAACM,SAArB,CAA+BE,MAA/B,CAAsC,YAAtC;AACAd,MAAAA,oBAAoB,CAACe,eAArB,CAAqC,SAArC,EAAgD,SAAhD;AACAN,MAAAA,uBAAuB,CAACO,YAAxB,CAAqC,UAArC,EAAiD,UAAjD;AACD,KAJD,MAIO;AACLV,MAAAA,oBAAoB,CAACM,SAArB,CAA+BK,GAA/B,CAAmC,YAAnC;AACAjB,MAAAA,oBAAoB,CAACgB,YAArB,CAAkC,SAAlC,EAA6C,SAA7C;AACAP,MAAAA,uBAAuB,CAACM,eAAxB,CAAwC,UAAxC,EAAoD,UAApD;AACD;AACF;AAED;;;;;;;;AAMA,WAASG,IAAT,CAAeC,IAAf,EAAqB;AACnBA,IAAAA,IAAI,CAACC,cAAL,CAAoBC,gBAApB,CAAqC,QAArC,EAA+CvB,SAA/C;AACD;;AAED,SAAO;AACLoB,IAAAA,IAAI,EAAEA;AADD,GAAP;AAGD,CAjC+B,EAAhC;;AAmCAvB,QAAQ,CAAC2B,EAAT,CAAYzB,SAAZ,GAAyB,YAAY;AACnC,SAAO;AACLqB,IAAAA,IAAI,EAAE,gBAAY;AAChB,UAAMK,oBAAoB,GAAGhB,QAAQ,CAACG,sBAAT,CAAgC,aAAhC,CAA7B;AAEAc,MAAAA,KAAK,CAACC,IAAN,CAAWF,oBAAX,EAAiCG,OAAjC,CAAyC,UAASC,QAAT,EAAmB;AAC1D,YAAMC,wBAAwB,GAAGD,QAAQ,CAACjB,sBAAT,CAAgC,mBAAhC,EAAqD,CAArD,CAAjC;AAEAf,QAAAA,QAAQ,CAACC,UAAT,CAAoBC,SAApB,CAA8BqB,IAA9B,CAAmC;AACjCW,UAAAA,SAAS,EAAEF,QADsB;AAEjCP,UAAAA,cAAc,EAAEQ;AAFiB,SAAnC;AAID,OAPD;AAQD;AAZI,GAAP;AAcD,CAfuB,EAAxB","sourcesContent":["// MODULE - m-check-box\n\nCoronita.clientflow.mCheckBox = (function () {\n\n  function isChanged(ev) {\n    const SELECTOR_C_CHECK_BOX = ev.currentTarget;\n    const ID = SELECTOR_C_CHECK_BOX.id.split('-').pop();\n    const SELECTOR_M_CHECK_BOX = document.getElementById('m-check-box-'+ID);\n    const SELECTOR_INPUT_CURRENCY = SELECTOR_M_CHECK_BOX.getElementsByClassName('c-input-currency__input')[0];\n    SELECTOR_INPUT_CURRENCY.focus();\n\n    if ( SELECTOR_M_CHECK_BOX.classList.contains('is-checked') ) {\n      SELECTOR_M_CHECK_BOX.classList.remove('is-checked');\n      SELECTOR_C_CHECK_BOX.removeAttribute('checked', 'checked');\n      SELECTOR_INPUT_CURRENCY.setAttribute('readonly', 'readonly');\n    } else {\n      SELECTOR_M_CHECK_BOX.classList.add('is-checked');\n      SELECTOR_C_CHECK_BOX.setAttribute('checked', 'checked');\n      SELECTOR_INPUT_CURRENCY.removeAttribute('readonly', 'readonly');\n    }\n  }\n\n  /**\n   * init method\n   * uiCoronitaModulesCheckBox\n   * @param\n   * @public\n   */\n  function init (data) {\n    data.$inputCheckBox.addEventListener('change', isChanged);\n  }\n\n  return {\n    init: init\n  };\n})();\n\nCoronita.ui.mCheckBox = (function () {\n  return {\n    init: function () {\n      const SELECTOR_CHECK_BOXES = document.getElementsByClassName('m-check-box');\n\n      Array.from(SELECTOR_CHECK_BOXES).forEach(function(checkBox) {\n        const SELECTOR_INPUT_CHECK_BOX = checkBox.getElementsByClassName('c-checkbox__input')[0];\n\n        Coronita.clientflow.mCheckBox.init({\n          $checkBox: checkBox,\n          $inputCheckBox: SELECTOR_INPUT_CHECK_BOX\n        });\n      });\n    }\n  };\n})();\n"],"file":"m-check-box.js"}