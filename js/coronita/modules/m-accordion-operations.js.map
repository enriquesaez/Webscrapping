{"version":3,"sources":["coronita/modules/m-accordion-operations.js"],"names":["Coronita","clientflow","mAccordionOperations","SELECTOR_CONTROLLER","CLASS_EXPANDED","KEY_ENTER","KEY_SPACE","ARIA_HIDDEN_TRUE","userData","data","isHidden","externalToggleContent","$refs","controller","click","isClick","ev","type","indexOf","keyCode","selectOperation","classList","toggle","checkbox","checked","setDark","isDark","cDropdown","toggleContent","preventDefault","content","getAttribute","toString","setAttribute","init","document","getElementById","id","querySelector","forEach","event","addEventListener","ui","$","each","attr","split"],"mappings":"AAAA;AAEAA,QAAQ,CAACC,UAAT,CAAoBC,oBAApB,GAA4C,YAAY;AACtD,MAAMC,mBAAmB,GAAG,mDAA5B;AACA,MAAMC,cAAc,GAAG,aAAvB;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,gBAAgB,GAAG,MAAzB;AAEA,SAAO,UAAUC,QAAV,EAAoB;AACzB,QAAIC,IAAI,GAAG;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAX;;AAIA,aAASC,qBAAT,GAAkC;AAChCF,MAAAA,IAAI,CAACG,KAAL,CAAWC,UAAX,CAAsBC,KAAtB;AACD;;AAED,aAASC,OAAT,CAAkBC,EAAlB,EAAsB;AACpB,aAAQA,EAAE,CAACC,IAAH,KAAY,UAAZ,IAA0B,CAACZ,SAAD,EAAYC,SAAZ,EAAuBY,OAAvB,CAA+BF,EAAE,CAACG,OAAlC,MAA+C,CAAC,CAA3E,IAAiFH,EAAE,CAACC,IAAH,KAAY,OAApG;AACD;;AAED,aAASG,eAAT,GAA4B;AAC1BX,MAAAA,IAAI,CAACG,KAAL,CAAWV,oBAAX,CAAgCmB,SAAhC,CAA0CC,MAA1C,CAAiD,aAAjD,EAAgEb,IAAI,CAACG,KAAL,CAAWW,QAAX,CAAoBC,OAApF;AACAC,MAAAA,OAAO;AACR;;AAED,aAASA,OAAT,GAAoB;AAClB,UAAMC,MAAM,GAAIjB,IAAI,CAACG,KAAL,CAAWW,QAAX,IAAuBd,IAAI,CAACG,KAAL,CAAWW,QAAX,CAAoBC,OAA5C,IAAwD,CAACf,IAAI,CAACC,QAA7E;;AACA,UAAID,IAAI,CAACG,KAAL,CAAWe,SAAf,EAA0B;AACxBlB,QAAAA,IAAI,CAACG,KAAL,CAAWe,SAAX,CAAqBN,SAArB,CAA+BC,MAA/B,CAAsC,kBAAtC,EAA0DI,MAA1D;AACD;AACF;;AAED,aAASE,aAAT,CAAwBZ,EAAxB,EAA4B;AAC1B,UAAID,OAAO,CAACC,EAAD,CAAX,EAAiB;AACfA,QAAAA,EAAE,CAACa,cAAH;AACApB,QAAAA,IAAI,CAACC,QAAL,GAAgB,IAAhB;;AACA,YAAID,IAAI,CAACG,KAAL,CAAWkB,OAAX,CAAmBC,YAAnB,CAAgC,aAAhC,EAA+CC,QAA/C,OAA8DzB,gBAAgB,CAACyB,QAAjB,EAAlE,EAA+F;AAC7FvB,UAAAA,IAAI,CAACC,QAAL,GAAgB,KAAhB;AACD;;AAEDD,QAAAA,IAAI,CAACG,KAAL,CAAWkB,OAAX,CAAmBG,YAAnB,CAAgC,aAAhC,EAA+CxB,IAAI,CAACC,QAAL,CAAcsB,QAAd,EAA/C;AACAvB,QAAAA,IAAI,CAACG,KAAL,CAAWC,UAAX,CAAsBoB,YAAtB,CAAmC,eAAnC,EAAoDxB,IAAI,CAACC,QAAL,GAAgB,OAAhB,GAA0B,MAA9E;AACAD,QAAAA,IAAI,CAACG,KAAL,CAAWV,oBAAX,CAAgCmB,SAAhC,CAA0CC,MAA1C,CAAiDlB,cAAjD,EAAiE,CAACK,IAAI,CAACC,QAAvE;AACAe,QAAAA,OAAO;AACR;AACF;;AAED,aAASS,IAAT,GAAiB;AACf,UAAMhC,oBAAoB,GAAGiC,QAAQ,CAACC,cAAT,CAAwB,4BAA4B5B,QAAQ,CAAC6B,EAA7D,CAA7B;AACA,UAAMxB,UAAU,GAAGX,oBAAoB,CAACoC,aAArB,CAAmCnC,mBAAnC,CAAnB;AACAM,MAAAA,IAAI,CAACG,KAAL,GAAa;AACXV,QAAAA,oBAAoB,EAAEA,oBADX;AAEXW,QAAAA,UAAU,EAAEA,UAFD;AAGXiB,QAAAA,OAAO,EAAEK,QAAQ,CAACC,cAAT,CAAwBvB,UAAU,CAACkB,YAAX,CAAwB,eAAxB,CAAxB,CAHE;AAIXR,QAAAA,QAAQ,EAAErB,oBAAoB,CAACoC,aAArB,CAAmC,mBAAnC,CAJC;AAKXX,QAAAA,SAAS,EAAEzB,oBAAoB,CAACoC,aAArB,CAAmC,4BAAnC;AALA,OAAb;AAQA,OAAC,OAAD,EAAU,UAAV,EAAsBC,OAAtB,CAA8B,UAAAC,KAAK,EAAI;AACrC/B,QAAAA,IAAI,CAACG,KAAL,CAAWC,UAAX,CAAsB4B,gBAAtB,CAAuCD,KAAvC,EAA8CZ,aAA9C;AACD,OAFD;;AAGA,UAAInB,IAAI,CAACG,KAAL,CAAWW,QAAf,EAAyB;AACvBd,QAAAA,IAAI,CAACG,KAAL,CAAWW,QAAX,CAAoBkB,gBAApB,CAAqC,QAArC,EAA+CrB,eAA/C;AACD;AACF;;AAED,WAAO;AACLc,MAAAA,IAAI,EAAJA,IADK;AAELN,MAAAA,aAAa,EAAEjB;AAFV,KAAP;AAID,GA/DD;AAgED,CAvE0C,EAA3C;;AAyEAX,QAAQ,CAAC0C,EAAT,CAAYxC,oBAAZ,GAAoC,YAAY;AAC9C,WAASgC,IAAT,GAAiB;AACfS,IAAAA,CAAC,CAAC,wCAAD,CAAD,CAA4CC,IAA5C,CAAiD,YAAY;AAC3D,UAAM1C,oBAAoB,GAAGF,QAAQ,CAACC,UAAT,CAAoBC,oBAApB,CAAyC;AACpEmC,QAAAA,EAAE,EAAEM,CAAC,CAAC,IAAD,CAAD,CAAQE,IAAR,CAAa,IAAb,EAAmBC,KAAnB,CAAyB,aAAzB,EAAwC,CAAxC;AADgE,OAAzC,CAA7B;AAGA5C,MAAAA,oBAAoB,CAACgC,IAArB;AACD,KALD;AAMD;;AAED,SAAO;AACLA,IAAAA,IAAI,EAAEA;AADD,GAAP;AAGD,CAbkC,EAAnC","sourcesContent":["// MODULE - m-accordion\n\nCoronita.clientflow.mAccordionOperations = (function () {\n  const SELECTOR_CONTROLLER = '[data-coronita-m-accordion-operations-controller]';\n  const CLASS_EXPANDED = 'is-expanded';\n  const KEY_ENTER = 13;\n  const KEY_SPACE = 32;\n  const ARIA_HIDDEN_TRUE = 'true';\n\n  return function (userData) {\n    let data = {\n      isHidden: true\n    };\n\n    function externalToggleContent () {\n      data.$refs.controller.click();\n    }\n\n    function isClick (ev) {\n      return (ev.type === 'keypress' && [KEY_ENTER, KEY_SPACE].indexOf(ev.keyCode) !== -1) || ev.type === 'click';\n    }\n\n    function selectOperation () {\n      data.$refs.mAccordionOperations.classList.toggle('is-selected', data.$refs.checkbox.checked);\n      setDark();\n    }\n\n    function setDark () {\n      const isDark = (data.$refs.checkbox && data.$refs.checkbox.checked) || !data.isHidden;\n      if (data.$refs.cDropdown) {\n        data.$refs.cDropdown.classList.toggle('c-dropdown--dark', isDark);\n      }\n    }\n\n    function toggleContent (ev) {\n      if (isClick(ev)) {\n        ev.preventDefault();\n        data.isHidden = true;\n        if (data.$refs.content.getAttribute('aria-hidden').toString() === ARIA_HIDDEN_TRUE.toString()) {\n          data.isHidden = false;\n        }\n\n        data.$refs.content.setAttribute('aria-hidden', data.isHidden.toString());\n        data.$refs.controller.setAttribute('aria-expanded', data.isHidden ? 'false' : 'true');\n        data.$refs.mAccordionOperations.classList.toggle(CLASS_EXPANDED, !data.isHidden);\n        setDark();\n      }\n    }\n\n    function init () {\n      const mAccordionOperations = document.getElementById('m-accordion-operations-' + userData.id);\n      const controller = mAccordionOperations.querySelector(SELECTOR_CONTROLLER);\n      data.$refs = {\n        mAccordionOperations: mAccordionOperations,\n        controller: controller,\n        content: document.getElementById(controller.getAttribute('aria-controls')),\n        checkbox: mAccordionOperations.querySelector('[type=\"checkbox\"]'),\n        cDropdown: mAccordionOperations.querySelector('[data-coronita-c-dropdown]')\n      };\n\n      ['click', 'keypress'].forEach(event => {\n        data.$refs.controller.addEventListener(event, toggleContent);\n      });\n      if (data.$refs.checkbox) {\n        data.$refs.checkbox.addEventListener('change', selectOperation)\n      }\n    }\n\n    return {\n      init,\n      toggleContent: externalToggleContent\n    };\n  };\n})();\n\nCoronita.ui.mAccordionOperations = (function () {\n  function init () {\n    $('[data-coronita-m-accordion-operations]').each(function () {\n      const mAccordionOperations = Coronita.clientflow.mAccordionOperations({\n        id: $(this).attr('id').split('operations-')[1]\n      });\n      mAccordionOperations.init();\n    });\n  }\n\n  return {\n    init: init\n  };\n})();\n"],"file":"m-accordion-operations.js"}