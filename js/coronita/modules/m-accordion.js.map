{"version":3,"sources":["coronita/modules/m-accordion.js"],"names":["Coronita","clientflow","mAccordion","SELECTOR_CONTROLLER","SELECTOR_CONTENT","SELECTOR_ICON_CONTROLLER","SELECTOR_ICON_STATUS","CLASS_EXPANDED","KEY_ENTER","KEY_SPACE","ARIA_HIDDEN_TRUE","userData","data","isHidden","externalToggleContent","$refs","controller","click","isClick","ev","type","indexOf","keyCode","toggleContent","content","getAttribute","toString","iconStatus","toggleIcons","statusIcons","iconController","icons","setAttribute","classList","toggle","icon","list","addIcon","removeIcon","add","remove","init","document","getElementById","id","querySelector","forEach","event","addEventListener","ui","$","each","attr"],"mappings":"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","sourcesContent":["// MODULE - m-accordion\n\n\n\n Coronita.clientflow.mAccordion = (function () {\n\n  const SELECTOR_CONTROLLER = '[data-coronita-m-accordion-button]';\n  const SELECTOR_CONTENT = '[data-coronita-m-accordion-content]';\n  const SELECTOR_ICON_CONTROLLER = '[data-coronita-m-accordion-icon-controller]';\n  const SELECTOR_ICON_STATUS = '[data-coronita-m-accordion-icon-status]';\n  const CLASS_EXPANDED = 'is-expanded';\n  const KEY_ENTER = 13;\n  const KEY_SPACE = 32;\n  const ARIA_HIDDEN_TRUE = true;\n  return function (userData) {\n    let data = {\n      isHidden: true\n    };\n\n    function externalToggleContent () {\n      data.$refs.controller.click();\n    }\n\n    function isClick (ev) {\n      return (ev.type === 'keypress' && [KEY_ENTER, KEY_SPACE].indexOf(ev.keyCode) !== -1) || ev.type === 'click';\n    }\n\n    function toggleContent (ev) {\n      if (isClick(ev)) {\n        data.isHidden = true;\n        if (data.$refs.content.getAttribute('aria-hidden').toString() === ARIA_HIDDEN_TRUE.toString()) {\n          data.isHidden = false;\n        }\n\n        if (data.$refs.iconStatus) {\n          toggleIcons(data.$refs.iconStatus, userData.statusIcons);\n        }\n        if (data.$refs.iconController) {\n          toggleIcons(data.$refs.iconController, userData.icons);\n        }\n\n        data.$refs.content.setAttribute('aria-hidden', data.isHidden.toString());\n        data.$refs.controller.setAttribute('aria-expanded', data.isHidden ? 'false' : 'true');\n        data.$refs.mAccordion.classList.toggle(CLASS_EXPANDED, !data.isHidden);\n      }\n    }\n\n    function toggleIcons (icon, list) {\n      const addIcon = data.isHidden ? list[0] : list[1];\n      const removeIcon = data.isHidden ? list[1] : list[0];\n      icon.classList.add('c-icon-' + addIcon);\n      icon.classList.remove('c-icon-' + removeIcon);\n    }\n\n    function init () {\n      const mAccordion = document.getElementById(userData.id);\n      if (mAccordion) {\n        const controller = mAccordion.querySelector(SELECTOR_CONTROLLER);\n        data.$refs = {\n          mAccordion: mAccordion,\n          controller: controller,\n          content: mAccordion.querySelector(SELECTOR_CONTENT),\n          iconController: controller.querySelector(SELECTOR_ICON_CONTROLLER),\n          iconStatus: mAccordion.querySelector(SELECTOR_ICON_STATUS)\n        };\n\n        ['click', 'keypress'].forEach(event => {\n          data.$refs.controller.addEventListener(event, toggleContent);\n        });\n      }\n    }\n\n    return {\n      init,\n      toggleContent: externalToggleContent\n    };\n  }\n})();\n\nCoronita.ui.mAccordion = (function () {\n  \n  function init () {\n    $('[data-coronita-m-accordion]').each(function () {\n      const mAccordion = Coronita.clientflow.mAccordion({\n        id: $(this).attr('id')\n      });\n      mAccordion.init();\n    });\n  }\n\n  return {\n    init\n  };\n})();\n\n"],"file":"m-accordion.js"}