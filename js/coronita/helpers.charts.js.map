{"version":3,"sources":["coronita/helpers.charts.js"],"names":["Coronita","helpers","charts","_seed","Date","now","axisData","months","year","week","inputs","min","max","count","decimals","continuity","getAxisData","params","axisValues","i","value","amount","push","generateData","config","numbers","Chart","merge","line","importParams","options","maintainAspectRatio","spanGaps","elements","tension","plugins","filler","propagate","scales","xAxes","ticks","autoSkip","maxRotation","defaults","boundary","backgroundColor","borderColor","$","extend","id","type","data","labels","xAxis","datasets","label","fill","legend","display","title","text","gridLines","yAxes","tooltips","enabled","custom","tooltipModel","tooltipEl","document","getElementById","tooltipId","classList","remove","yAlign","add","position","_chart","canvas","getBoundingClientRect","style","left","caretX","top","caretY","cfg","from","dfactor","Math","pow","rand","round","seed","undefined"],"mappings":"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","sourcesContent":["Coronita.helpers.charts = (function () {\n  var _seed = Date.now();\n  \n\n  var axisData = {\n    months: ['E', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n    year: 2018,\n    week: 1,\n  };\n\n  /*var COLORS = [\n    '#4dc9f6',\n    '#f67019',\n    '#f53794',\n    '#537bc4',\n    '#acc236',\n    '#166a8f',\n    '#00a950',\n    '#58595b',\n    '#8549ba'\n  ];*/\n\n  var inputs = {\n    min: -100,\n    max: 100,\n    count: 8,\n    decimals: 2,\n    continuity: 1\n  };\n\n  function getAxisData(params) {\n    var axisValues = [],\n      i = 0;\n    if (params.value === 'years') {\n      for (i=0; i<params.amount; i++) {\n        axisValues.push(axisData.year - i);\n      }\n    }\n\n    if (params.value === 'months') {\n      for (i=0; i<params.amount; i++) {\n        axisValues.push(axisData.months[i]);\n      }\n    }\n\n    if (params.value === 'weeks') {\n      for (i=0; i<params.amount; i++) {\n        axisValues.push((axisData.week + i) + 'S');\n      }\n    }\n    return axisValues;\n  }\n\n  function generateData(config) {\n    return numbers(Chart.helpers.merge(inputs, config || {}));\n  }\n\n  function line (importParams) {\n    var options = {\n      maintainAspectRatio: false,\n      spanGaps: false,\n      elements: {\n        line: {\n          tension: 0.000001\n        }\n      },\n      plugins: {\n        filler: {\n          propagate: false\n        }\n      },\n      scales: {\n        xAxes: [{\n          ticks: {\n            autoSkip: false,\n            maxRotation: 0\n          }\n        }]\n      }\n    };\n\n    var defaults = {\n      boundary: 'start',\n      backgroundColor: '#D4EDFC',\n      borderColor: '#49A5E6'\n    };\n    var params = $.extend(true, {}, defaults, importParams);\n    new Chart(params.id, {\n      type: 'line',\n      data: {\n        labels: getAxisData(params.xAxis),\n        datasets: [{\n          backgroundColor: params.backgroundColor,\n          borderColor: params.borderColor,\n          data: generateData({\n            count: params.xAxis.amount\n          }),\n          label: 'Dataset',\n          //pointRadius: 0,\n          fill: params.boundary\n        }]\n      },\n      options: Chart.helpers.merge(options, {\n        legend: {\n          display: false\n        },\n        title: {\n          text: null,\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              display:false\n            }\n          }],\n          yAxes: [{\n            display: false   \n          }]\n        },\n        tooltips: {\n          enabled: false,\n          custom: function(tooltipModel) {\n            var tooltipEl = document.getElementById(params.tooltipId);\n            tooltipEl.classList.remove('above', 'below', 'no-transform', 'hide-content');\n            if (tooltipModel.yAlign) {\n                tooltipEl.classList.add(tooltipModel.yAlign);\n            } else {\n                tooltipEl.classList.add('no-transform');\n            }\n            var position = this._chart.canvas.getBoundingClientRect();\n            tooltipEl.style.left = tooltipModel.caretX + 24 + 32 + 'px';\n            tooltipEl.style.top = tooltipModel.caretY + (-40) + 32 + 'px';\n          }\n        }\n      })\n    });\n  }\n\n  function numbers(config) {\n    var cfg = config || {};\n    var min = cfg.min || 0;\n    var max = cfg.max || 1;\n    var from = cfg.from || [];\n    var count = cfg.count || 8;\n    var decimals = cfg.decimals || 8;\n    var continuity = cfg.continuity || 1;\n    var dfactor = Math.pow(10, decimals) || 0;\n    var data = [];\n    var i, value;\n    _seed = Date.now();\n    for (i = 0; i < count; ++i) {\n      value = (from[i] || 0) + rand(min, max);\n      if (rand() <= continuity) {\n        data.push(Math.round(dfactor * value) / dfactor);\n      } else {\n        data.push(null);\n      }\n    }\n\n    return data;\n  }\n\n  function rand(min, max) {\n    var seed = _seed;\n    min = min === undefined ? 0 : min;\n    max = max === undefined ? 1 : max;\n    _seed = (seed * 9301 + 49297) % 233280;\n    return min + (_seed / 233280) * (max - min);\n  }\n\n  return {\n    line: line\n  };\n})();\n"],"file":"helpers.charts.js"}