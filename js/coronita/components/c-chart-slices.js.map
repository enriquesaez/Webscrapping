{"version":3,"sources":["coronita/components/c-chart-slices.js"],"names":["Coronita","clientflow","cChartSlices","SELECTOR_SVG_CIRCLES","SELECTOR_MARKER","SELECTOR_SLICE_TEXT","SELECTOR_SLICE_AMOUNT","SELECTOR_SELECTED","CLASS_SELECTED","SELECTOR_EXPAND_LEGEND","SELECTOR_ICON","data","isClick","ev","type","keyCode","toggleHiddenLegendItems","target","currentTarget","isExpanded","getAttribute","hiddenItems","document","getElementById","querySelectorAll","Array","prototype","slice","call","forEach","item","setAttribute","toString","selectedSlice","circle","selected","$refs","querySelector","icon","marker","style","transform","sliceText","textContent","sliceAmount","replace","innerHTML","_","tmpl","color","renderChart","angle","markerAngle","lastAngle","svgCircles","valueNow","parseFloat","strokeDashoffset","addEventListener","init","userData","id","legend","setTimeout","ui","$","each","idCChartSlices","attr","Math","floor","random","Date","now","chart"],"mappings":"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","sourcesContent":["// COMPONENT - c-input-box\nCoronita.clientflow.cChartSlices = (function () {\n  return function () {\n    const SELECTOR_SVG_CIRCLES = '.c-chart-slices__svg-circle';\n    const SELECTOR_MARKER = '[data-coronita-c-chart-slices-marker]';\n    const SELECTOR_SLICE_TEXT = '[data-coronita-c-chart-slices-text]';\n    const SELECTOR_SLICE_AMOUNT = '[data-coronita-c-chart-slices-percentage]';\n    const SELECTOR_SELECTED = '.is-selected';\n    const CLASS_SELECTED = 'is-selected';\n    const SELECTOR_EXPAND_LEGEND = '[aria-expanded]';\n    const SELECTOR_ICON = '[data-coronita-c-chart-slices-icon]';\n    let data = {};\n\n    function isClick (ev) {\n      return ev.type === 'click' || ev.keyCode === 13 || ev.keyCode === 32;\n    }\n\n    function toggleHiddenLegendItems (ev) {\n      if (isClick(ev)) {\n        const target = ev.currentTarget;\n        const isExpanded = target.getAttribute('aria-expanded') === 'true';\n        const hiddenItems = document\n          .getElementById(target.getAttribute('aria-controls'))\n          .querySelectorAll('[aria-hidden]');\n        Array.prototype.slice.call(hiddenItems).forEach(item => {\n          item.setAttribute('aria-hidden', isExpanded.toString());\n        });\n        target.setAttribute('aria-expanded', (!isExpanded).toString());\n      }\n    }\n\n    function selectedSlice (circle) {\n      const selected = data.$refs.cChartSlices.querySelector(SELECTOR_SELECTED);\n      const icon = data.$refs.cChartSlices.querySelector(SELECTOR_ICON);\n      data.$refs.marker.style.transform = 'rotate(' + circle.getAttribute('data-marker-angle') + 'deg)';\n      data.$refs.sliceText.textContent = circle.getAttribute('data-value-text');\n      data.$refs.sliceAmount.textContent = circle.getAttribute('aria-valuenow');\n      if (selected) {\n        selected.setAttribute('class', selected.getAttribute('class').replace(CLASS_SELECTED, ''));\n      }\n      circle.setAttribute('class', circle.getAttribute('class') + ' ' + CLASS_SELECTED);\n      if (icon) {\n        icon.innerHTML = _.tmpl('#c-coronita-c-chart-slices-icon', {\n          icon: circle.getAttribute('data-icon'),\n          color: circle.getAttribute('data-color')\n        });\n      }\n    }\n\n    function renderChart () {\n      let angle;\n      let markerAngle;\n      let lastAngle = 0;\n\n      Array.prototype.slice.call(data.$refs.svgCircles).forEach(circle => {\n        const valueNow = parseFloat(circle.getAttribute('aria-valuenow'));\n        circle.setAttribute('transform', 'rotate(' + lastAngle + ', 110, 110)');\n        circle.style.strokeDashoffset = (25.12 - ((25.12 * valueNow) / 100)) + 'em';\n        angle = (360 / 100) * valueNow;\n        markerAngle = lastAngle + (angle / 2);\n        lastAngle = lastAngle + angle;\n        if (lastAngle >= 360) {\n          lastAngle = 0.1;\n        }\n        circle.setAttribute('data-marker-angle', markerAngle);\n        circle.addEventListener('click', function (ev) {\n          selectedSlice(circle);\n        });\n      });\n\n      selectedSlice(data.$refs.svgCircles[0]);\n    }\n\n    /**\n    * init method\n    * @param userData - object with component params\n    * @public\n    */\n    function init (userData) {\n      const cChartSlices = document.getElementById(userData.id);\n      data.$refs = {\n        cChartSlices: cChartSlices,\n        svgCircles: cChartSlices.querySelectorAll(SELECTOR_SVG_CIRCLES),\n        marker: cChartSlices.querySelector(SELECTOR_MARKER),\n        sliceText: cChartSlices.querySelector(SELECTOR_SLICE_TEXT),\n        sliceAmount: cChartSlices.querySelector(SELECTOR_SLICE_AMOUNT),\n        legend: cChartSlices.querySelector(SELECTOR_EXPAND_LEGEND)\n      };\n      setTimeout(function () {\n        renderChart();\n      }, 50);\n      if (data.$refs.legend) {\n        data.$refs.legend.addEventListener('click', toggleHiddenLegendItems);\n        data.$refs.legend.addEventListener('keyup', toggleHiddenLegendItems);\n      }\n    }\n\n    return {\n      init\n    };\n  };\n})();\n\nCoronita.ui.cChartSlices = (function () {\n  function init () {\n    $('[data-coronita-c-chart-slices]').each(function () {\n      let idCChartSlices = $(this).attr('id') || ('c-chart-slices-' + (Math.floor(Math.random() * Date.now())));\n      $(this).attr('id', idCChartSlices);\n      var chart = new Coronita.clientflow.cChartSlices();\n      chart.init({\n        id: idCChartSlices\n      });\n    });\n  }\n\n  return {\n    init: init\n  };\n})();\n"],"file":"c-chart-slices.js"}