{"version":3,"sources":["coronita/helpers.mixins.js"],"names":["Coronita","helpers","mixins","listboxOptions","c_coronita_c_listbox","getCurrencySymbol","currencyCode","currencySymbols","_","isUndefined","formatNumber","value","format","dontPrintZeroDecimals","numberHasDecimals","Globalize","parseFloat","isNaN","number","parseInt","tmpl","id","data","setTmplData","$","template","tmpl_index","contents","html","resultErrorMsg","getErrorStr","error","isFunction","$B","checkInitialStaticLoad","prepareErrorTmplMsg","tryGetTemplate","e","errorTemplate","console","log","isArray","extend","tmpl_data","length","each","d","mixin","templateSettings","interpolate","evaluate","$container","name","attr","params","JSON","parse"],"mappings":"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","sourcesContent":["Coronita.helpers.mixins = function (listboxOptions) {\n  var mixins = {\n    c_coronita_c_listbox: function () {\n      return true;\n    },\n    getCurrencySymbol: function (currencyCode) {\n      var currencySymbols = {\n        'EUR': '€',\n        'USD': '$',\n        'GBP': '£',\n        'JPY': '¥'\n      };\n      return _.isUndefined(currencySymbols[currencyCode]) ? currencyCode\n        : currencySymbols[currencyCode];\n    },\n    formatNumber: function (value, format, dontPrintZeroDecimals) {\n      format = format || 'n';\n      if (value === null) {\n        return '-';\n      }\n      if (dontPrintZeroDecimals && !_.numberHasDecimals(value)) {\n        format = 'd';\n      }\n      value = (typeof value === 'string') ? Globalize.parseFloat(value)\n        : value;\n      if (isNaN(value)) {\n        return '';\n      }\n      return Globalize.format(value, format);\n    },\n    numberHasDecimals: function (number) {\n      return parseInt(number, 10) !== number;\n    },\n    tmpl: function (id, data, setTmplData) {\n      var tmpl = $(id),\n        template = '',\n        tmpl_index = 0,\n        contents = tmpl.html(),\n        resultErrorMsg,\n        getErrorStr = function (error) {\n          if (_.isFunction($B.checkInitialStaticLoad)) {\n            $B.checkInitialStaticLoad();\n          }\n          return $B.prepareErrorTmplMsg(data, id, error);\n        },\n        tryGetTemplate = function (data) {\n          try {\n            data.tmpl_index = tmpl_index;\n            template += _.template(contents, data);\n            tmpl_index += 1;\n          } catch (e) {\n            resultErrorMsg = getErrorStr(e);\n            template = $B.errorTemplate('Error de templating', [resultErrorMsg]);\n          }\n        };\n\n      data = data || {};\n\n      if (!tmpl[0]) {\n        console.log('No existe el tmpl: ' + id);\n        if (_.isFunction($B.checkInitialStaticLoad)) {\n          $B.checkInitialStaticLoad();\n        }\n        return;\n      }\n\n      if (!_.isArray(data) && setTmplData === true) {\n        data = _.extend(data, {\n          tmpl_data: $.extend(true, {}, data)\n        });\n      }\n\n      if (!data.length) {\n        tryGetTemplate(data);\n      } else {\n        _.each(data, function (d) {\n          tryGetTemplate(d);\n        });\n      }\n\n      return template;\n    }\n  };\n\n  _.mixin(mixins);\n  _.templateSettings = {\n    interpolate: /\\{\\{(.+?)\\}\\}/g,\n    evaluate: /\\[\\[(.+?)\\]\\]/g\n  };\n\n  $('[data-mixins-clientflow]').each(function () {\n    var $container = $(this),\n      name = $container.attr('data-mixins-clientflow'),\n      params = JSON.parse($container.attr('data-mixins-clientflow-params'));\n    if (_.isFunction(_[name])) {\n      $container.html(_[name](params));\n    } else {\n      console.log(name + ' is not a mixin!!!');\n    }\n  });\n};\n"],"file":"helpers.mixins.js"}