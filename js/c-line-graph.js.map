{"version":3,"sources":["c-line-graph.js"],"names":["$","document","ready","each","id","attr","xPos","percentDisplace","graphWidth","find","width","investValue","tempValue","aspectRatio","biggestNumber","numberArray","bigDaddy","i","length","data","idSelect","value","parseFloat","val","push","dataLength","pathOutputDataValues","polygonOutputDataValues","bigNumber","spacer","dataToInsert","incrementX","j","parseInt","substr","pathLength","Math","floor","get","getTotalLength","idSvg","getElementById","setAttribute","change","texto","text","valor","html"],"mappings":"AAAAA,CAAC,CAACC,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAW;AACzB;AACA;AACAF,EAAAA,CAAC,CAAC,eAAD,CAAD,CAAmBG,IAAnB,CAAwB,YAAU;AAC9B,QAAIC,EAAE,GAAGJ,CAAC,CAAC,IAAD,CAAD,CAAQK,IAAR,CAAa,IAAb,CAAT,CAD8B,CAE9B;;AACA,QAAIC,IAAI,GAAG,CAAX,CAH8B,CAK9B;;AACA,QAAIC,eAAe,GAAG,CAAtB,CAN8B,CAQ9B;;AACA,QAAIC,UAAU,GAAGR,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,0BAAb,EAAyCC,KAAzC,EAAjB;AAEA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,SAAS,GAAG,CAAhB;AAEA,QAAIC,WAAW,GAAGb,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,0BAAb,EAAyCJ,IAAzC,CAA8C,mBAA9C,CAAlB,CAd8B,CAgB9B;;AACA,aAASS,aAAT,CAAuBC,WAAvB,EAAoC;AAChC,UAAIC,QAAQ,GAAG,CAAf;;AACA,WAAIC,CAAC,GAAC,CAAN,EAASA,CAAC,IAAGF,WAAW,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,YAAGE,IAAI,CAACF,CAAD,CAAJ,GAAUD,QAAb,EAAuB;AACnBA,UAAAA,QAAQ,GAAGD,WAAW,CAACE,CAAD,CAAtB;AACH;AACJ;;AACD,aAAOD,QAAP;AACH,KAzB6B,CA0B9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAIG,IAAI,GAAC,EAAT;AACA,QAAIC,QAAQ,GAAG,MAAMhB,EAAN,GAAW,gBAA1B;AACAJ,IAAAA,CAAC,CAACoB,QAAD,CAAD,CAAYjB,IAAZ,CAAiB,YAAW;AACxB,UAAIkB,KAAK,GAAGC,UAAU,CAACtB,CAAC,CAAC,IAAD,CAAD,CAAQuB,GAAR,EAAD,CAAtB;AACAJ,MAAAA,IAAI,CAACK,IAAL,CAAUH,KAAV;AACH,KAHD;AAIA,QAAII,UAAU,GAAGN,IAAI,CAACD,MAAtB,CApE8B,CAsE9B;;AACA,QAAIQ,oBAAoB,GAAG,GAA3B,CAvE8B,CAyE9B;;AACA,QAAIC,uBAAuB,GAAG,EAA9B,CA1E8B,CA4E9B;;AACA,QAAIC,SAAS,GAAGd,aAAa,CAACK,IAAD,CAA7B,CA7E8B,CA+E9B;;AACA,QAAIU,MAAM,GAAGrB,UAAU,IAAEW,IAAI,CAACD,MAAL,GAAY,CAAd,CAAvB;AAEA,QAAIY,YAAY,GAAG,CAAnB;AACA,QAAIC,UAAU,GAAG,CAAjB;;AAEA,SAAIC,CAAC,GAAC,CAAN,EAASA,CAAC,GAAEb,IAAI,CAACD,MAAjB,EAAyBc,CAAC,EAA1B,EAA8B;AAC1BF,MAAAA,YAAY,GAAIG,QAAQ,CAACzB,UAAU,GAACK,WAAZ,CAAT,IAAsCM,IAAI,CAACa,CAAD,CAAJ,GAAQ,GAAT,GAAcJ,SAAf,GAA0B,IAA9D,CAAf;AACAD,MAAAA,uBAAuB,GAAGA,uBAAuB,GAAGI,UAA1B,GAAuC,GAAvC,GAA6CD,YAA7C,GAA4D,GAAtF;AACAJ,MAAAA,oBAAoB,GAAGA,oBAAoB,GAAGK,UAAvB,GAAoC,GAApC,GAA0CD,YAA1C,GAAyD,IAAhF;AACAC,MAAAA,UAAU,GAAGA,UAAU,GAAGF,MAA1B;AACH,KA1F6B,CA2F9B;;;AACAH,IAAAA,oBAAoB,GAAGA,oBAAoB,CAACQ,MAArB,CAA4B,CAA5B,EAA8BR,oBAAoB,CAACR,MAArB,GAA4B,CAA1D,CAAvB,CA5F8B,CA8F9B;;AACAlB,IAAAA,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,qBAAb,EAAoCJ,IAApC,CAAyC,GAAzC,EAA8CqB,oBAA9C;AACA1B,IAAAA,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,yBAAb,EAAwCJ,IAAxC,CAA6C,QAA7C,EAAuDsB,uBAAuB,GAAGnB,UAA1B,GAAuC,QAA9F,EAhG8B,CAkG9B;;AACA,QAAI2B,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAYrC,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,qBAAb,EAAoC6B,GAApC,CAAwC,CAAxC,EAA2CC,cAA3C,EAAZ,CAAjB;AACA,QAAIC,KAAK,GAAGpC,EAAE,GAAG,MAAjB;AACAH,IAAAA,QAAQ,CAACwC,cAAT,CAAwBD,KAAxB,EAA+BE,YAA/B,CAA4C,SAA5C,EAAuD,SAAQlC,UAAR,GAAqB,GAArB,GAA0ByB,QAAQ,CAACzB,UAAU,GAACK,WAAZ,CAAzF,EArG8B,CAuG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAb,IAAAA,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,gBAAb,EAA+BkC,MAA/B,CAAsC,YAAW;AAC7C,UAAIC,KAAK,GAAG5C,CAAC,CAACI,EAAE,GAAG,SAAN,CAAD,CAAkBK,IAAlB,CAAuB,WAAvB,EAAoCoC,IAApC,EAAZ;AACA,UAAIC,KAAK,GAAG9C,CAAC,CAACI,EAAE,GAAG,SAAN,CAAD,CAAkBK,IAAlB,CAAuB,WAAvB,EAAoCc,GAApC,EAAZ;AACAvB,MAAAA,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,uBAAb,EAAsCsC,IAAtC,CAA2C,MAAMH,KAAjD;AACA5C,MAAAA,CAAC,CAAC,IAAD,CAAD,CAAQS,IAAR,CAAa,+BAAb,EAA8CsC,IAA9C,CAAmD,KAAKD,KAAL,GAAa,IAAhE;AACH,KALD,EAhH8B,CAsH9B;AACA;AACH,GAxHD;AAyHH,CA5HD","sourcesContent":["$(document).ready(function() {\n    //var linegraph = $('.c-line-graph__svg');\n    //var linegraph = document.querySelectorAll('.c-line-graph');\n    $(\".c-line-graph\").each(function(){\n        var id = $(this).attr('id');\n        // Variable global de posicionamiento en el eje X\n        var xPos = 0;\n\n        // Variable global de porcentaje de desplazamiento en el eje x\n        var percentDisplace = 0;\n\n        // Anchura total del SVG\n        var graphWidth = $(this).find('.c-line-graph__container').width();\n\n        var investValue = 0;\n        var tempValue = 0;\n\n        var aspectRatio = $(this).find('.c-line-graph__container').attr('data-aspect-ratio');\n\n        // Función para calcular el mayor número de un array proporcionado como parámetro. Ese valor representará la altura 100% de la gráfica.\n        function biggestNumber(numberArray) {\n            var bigDaddy = 0;\n            for(i=0; i<= numberArray.length; i++) {\n                if(data[i] > bigDaddy) {\n                    bigDaddy = numberArray[i];\n                }\n            }\n            return bigDaddy;\n        }\n        // Función que es llamada cada vez que hay que desplazar el punto en el path del SVG y el manejador inferior\n        // function movePoint(element) {\n        //     //element.preventDefault();\n        //     //var mouse = element.originalEvent.mouse;\n        //     // var touch = element.originalEvent.touches[0] || element.originalEvent.changedTouches[0];\n        //     xPos = Math.floor(element.pageX);\n        //     console.log ('xPos: ' + xPos);\n        //     investValue = parseInt(xPos / spacer);\n        //     console.log ('investValue: ' + investValue);\n        //     console.log ('tempValue: ' + tempValue);\n        //     console.log ('data.length' + data.length);\n        //     // if(tempValue != investValue && investValue >= 0 && investValue < data.length) {\n        //     //     var valueToShow1 = parseInt(data[investValue]);\n        //     //     var valueToShow2 = (data[investValue] % 1).toFixed(2).substring(2);\n        //     //     $('.graph-data dd:first-of-type .helper-money').html(valueToShow1 + '<span class=\"helper-money_cents\">' +valueToShow2+ ' €</span>');\n        //     //     tempValue = investValue;\n        //     // }\n        //     percentDisplace = xPos*100/graphWidth;\n        //     moveObj(percentDisplace);\n        // }\n        //Función que se llama para mover efectivamente el punto en el path y el manejador en el eje X\n        // function moveObj(percent) {\n        //     var percent = (percent*pathLength) / 100;\n        //     // obtiene los valores x e y de un punto concreto del path\n        //     pt = $(this).find('.c-line-graph__path').get(0).getPointAtLength(percent);\n        //     pt.x = Math.round(pt.x);\n        //     pt.y = Math.round(pt.y);\n        //     console.log ('pt.x: ' + pt.x);\n        //     if(pt.x > 0) {\n        //         $(this).find('.c-line-graph__handler-line').attr('y2', pt.y);\n        //         $(this).find('.c-line-graph__trailmarker').css('transform', 'translate(-50%, -50%) translate3d('+pt.x+'px,'+pt.y+'px, 0)');\n        //         $(this).find('.c-line-graph__handler-line').css({'transform':'translateX('+ pt.x +'px)'});\n        //     }\n        // }\n\n        // Datos mock de valores de la gráfica. Itera los valores del select accesible que contiene los valores a utilizar en la gráfica\n        var data=[];\n        var idSelect = '#' + id + '-select option';\n        $(idSelect).each(function() {\n            var value = parseFloat($(this).val());\n            data.push(value);\n        });\n        var dataLength = data.length;\n\n        // Variable que albergará el set de valores del path de la gráfica. Los path SVG siempre empiezan por M para posicionar por primera vez el \"lapiz\" virtual\n        var pathOutputDataValues = \"M\";\n\n        // Variable que albergará el set de valores del polígono que sirve de relleno a la gráfica. La sintáxis es diferente al path de la línea.\n        var polygonOutputDataValues = \"\";\n\n        // Valor más alto del array de valores de la gráfica. Utiliza la función biggestNumber para obtener el valor más alto del array que pasamos como parámetro\n        var bigNumber = biggestNumber(data);\n\n        // Cálculo del valor de separación horizontal entre los vértices de la gráfica\n        var spacer = graphWidth/(data.length-1);\n\n        var dataToInsert = 0;\n        var incrementX = 0;\n\n        for(j=0; j< data.length; j++) {\n            dataToInsert = (parseInt(graphWidth*aspectRatio))*(((data[j]*100)/bigNumber)*0.01);\n            polygonOutputDataValues = polygonOutputDataValues + incrementX + ',' + dataToInsert + ' ';\n            pathOutputDataValues = pathOutputDataValues + incrementX + ',' + dataToInsert + ' L';\n            incrementX = incrementX + spacer;\n        }\n        // Se elimina la última L del set de coordenadas del path del SVG porque es innecesaria y provoca errores de render\n        pathOutputDataValues = pathOutputDataValues.substr(0,pathOutputDataValues.length-2);\n\n        // Agregamos ambos sets de coordenadas al polígono de relleno y al path de la gráfica.\n        $(this).find('.c-line-graph__path').attr('d', pathOutputDataValues);\n        $(this).find('.c-line-graph__polyline').attr('points', polygonOutputDataValues + graphWidth + ',0 0,0');\n\n        // Agregamos el nuevo valor del viewBox en función del tamaño de la gráfica.\n        var pathLength = Math.floor( $(this).find('.c-line-graph__path').get(0).getTotalLength() );\n        var idSvg = id + '-svg';\n        document.getElementById(idSvg).setAttribute('viewBox', '0 0 '+ graphWidth + ' '+(parseInt(graphWidth*aspectRatio)));\n\n        // $(this).find('.c-line-graph__container').on('mousemove',function(e) {\n        //     movePoint(e);\n        //     $(this).find('.c-line-graph__container').addClass('is-active');\n        // });\n        // $(this).find('.c-line-graph__container').on('mouseup',function(e) {\n        //     movePoint(e);\n        //     $(this).find('.c-line-graph__container').removeClass('is-active');\n        // });\n\n        $(this).find('#invest-select').change(function() {\n            var texto = $(id + '-select').find(':selected').text();\n            var valor = $(id + '-select').find(':selected').val();\n            $(this).find('.invest-message .date').html(' ' + texto);\n            $(this).find('.invest-message .invest-money').html('' + valor + ' €');\n        });\n        // Inicializa la función que mueve el punto a lo largo del path del SVG al cargarse la vista\n        //moveObj(0);\n    });\n});\n"],"file":"c-line-graph.js"}